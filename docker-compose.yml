version: '3.7'

services:

#  ########################################################################################################
#  # This container runs the postgresql database for mlflow.
#  ########################################################################################################
    postgres-mlflow:
        image: postgres:13
        environment:
          POSTGRES_USER: ${POSTGRES_USER}
          POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
          POSTGRES_DB: ${POSTGRES_DB}
        volumes:
          # The data folder is a named volume mounted to /var/lib/postgresql/data
          - postgres-db-volume-mlflow:/var/lib/postgresql/data


  ########################################################################################################
  # This container runs the webserver for mlflow.
  ########################################################################################################
    mlflow-webserver:
        build: ./dockerfiles/mlflow
        image: mlflow_server
        ports:
          - "5000:5000"
        environment:
          # The following credentials allow connection to the S3 server.
           AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
           AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
           AWS_DEFAULT_REGION: ${AWS_REGION}
           MLFLOW_S3_ENDPOINT_URL: http://s3:9000

        # The following command will launch the mlflow webserver on port 5000, with postgresql as the database
        # and S3 as the artifact storage.
        # The option "--serve-artifacts" will enable the serving of artifacts through mlflow as a proxy to the S3 server.
        command: mlflow server --backend-store-uri postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres-mlflow/${POSTGRES_DB} --default-artifact-root s3://${AWS_BUCKET_NAME}/ -h 0.0.0.0 -p 5000 --serve-artifacts
        depends_on:
          - postgres-mlflow


  ########################################################################################################
  # This container runs the jupyter lab.
  ########################################################################################################
    jupyter:
        image: jupyter_lab
        # docker-compose build beeore you can use the image in docker-compose up again.
        build: ./dockerfiles/jupyter
        ports:
          - ${JUPYTER_PORT}:${JUPYTER_PORT}
        environment:
          JUPYTER_ENABLE_LAB: "yes"
          JUPYTER_TOKEN: ${JUPYTER_TOKEN}
          PYTHONPATH: "$$PYTHONPATH:/opt/airflow/plugins"
          # Sets the tracking uri env variable for mlflow in jupyter lab
          # AWS credentials needed to access it via mlflow
          MLFLOW_TRACKING_URI: "http://mlflow-webserver:5000"
          GIT_PYTHON_REFRESH: "quiet"
          AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
          AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
        volumes:
          # Mounts the notebooks folder
          - ./notebooks:/notebooks
          # Mounts the src folder.
          - ./src:/src
          # Mounts the data folder to /data
          - ./data:/data
          # Mounts the root folder
          - ./:/mlops

        entrypoint: sh -c 'jupyter lab --ip=0.0.0.0 --port=${JUPYTER_PORT} --no-browser --notebook-dir=/mlops --allow-root'

volumes:
    mlflow-data:
    postgres-db-volume-mlflow: